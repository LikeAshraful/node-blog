const passport=require("passport"),LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcryptjs"),User=require("../models/User");passport.use(new LocalStrategy((async(username,password,done)=>{try{const user=await User.findOne({username:username});if(!user)return done(null,!1,{message:"Incorrect username"});return await bcrypt.compare(password,user.password)?done(null,user):done(null,!1,{message:"Incorrect password"})}catch(err){return done(err)}}))),passport.serializeUser(((user,done)=>{done(null,user.id)})),passport.deserializeUser((async(id,done)=>{try{done(null,await User.findById(id))}catch(err){done(err)}}));